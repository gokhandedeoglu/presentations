{"version":3,"sources":["integration_testbed.js"],"names":[],"mappings":"AAAA,KAAO,EACL,EAAC,CACH,KAAO,oBAAkB,CAAC;AAE1B,KAAO,EAAC,OAAM;AAAG,UAAQ;AAAG,cAAY,CAAC,KAAO,2BAAyB,CAAC;AAC1E,KAAO,EAAC,UAAS;AAAG,YAAU;AAAG,KAAG,CAAC,KAAO,iCAA+B,CAAC;AAC5E,KAAO,EAAC,cAAa;AAAG,QAAM,CAAC,KAAO,4BAA0B,CAAC;AACjE,KAAO,EAAC,GAAE,CAAC,KAAO,+BAA6B,CAAC;AAEhD,KAAO,EAAC,MAAK;AAAG,MAAI,CAAC,KAAO,4BAA0B,CAAC;AACvD,KAAO,EAAC,iBAAgB,CAAC,KAAO,8CAA4C,CAAC;AAC7E,KAAO,EAAC,QAAO,CAAC,KAAO,4CAA0C,CAAC;AAClE,KAAO,EAAC,YAAW;AAAG,UAAQ;AAAG,SAAO;AAAG,iBAAe;AAAG,gBAAc;AAAG,kBAAgB,CAAC,KAAO,0BAAwB,CAAC;AAC/H,KAAO,EAAC,kBAAiB,CAAC,KAAO,wDAAsD,CAAC;AACxF,KAAO,EAAC,cAAa,CAAC,KAAO,mDAAiD,CAAC;AAC/E,KAAO,EAAC,WAAU,CAAC,KAAO,qCAAmC,CAAC;AAC9D,KAAO,EAAC,iCAAgC,CAAC,KAAO,2EAAyE,CAAC;AAC1H,KAAO,EAAC,YAAW;AAAG,mBAAiB,CAAC,KAAO,+CAA6C,CAAC;AAC7F,KAAO,EAAC,UAAS,CAAC,KAAO,sCAAoC,CAAC;AAC9D,KAAO,EAAC,gBAAe,CAAC,KAAO,wDAAsD,CAAC;AACtF,KAAO,EAAC,WAAU,CAAC,KAAO,4CAA0C,CAAC;AAErE,KAAO,MAAM,mBAAiB;AAS5B,YAAU,CAAE,CAAC,OAAM;AAAG,oBAAgB;AAAG,oBAAgB;AAAG,YAAQ,CAAC,CAAG;AACtE,OAAG,WAAW,EAAI,CAAA,UAAS,OAAO,AAAC,EAAC,CAAC;AACrC,OAAI,SAAQ,AAAC,CAAC,SAAQ,CAAC,CAAG;AACxB,gBAAU,QAAQ,AAAC,CAAC,SAAQ,CAAG,EAAC,QAAO,IAAM;AAC3C,iBAAS,IAAI,AAAC,CAAC,IAAG,WAAW,CAAG,CAAA,QAAO,YAAY,CAAG,SAAO,CAAC,CAAC;MACjE,CAAC,CAAC;IACJ;AAAA,AACA,OAAG,cAAc,EAAI,CAAA,UAAS,OAAO,AAAC,EAAC,CAAC;AACxC,AAAI,MAAA,CAAA,MAAK,EAAI,IAAI,OAAK,AAAC,CAAC,GAAI,MAAI,AAAC,EAAC,CAAC,CAAC;AACpC,AAAI,MAAA,CAAA,WAAU,EAAI,IAAI,YAAU,AAAC,EAAC,CAAC;AACnC,OAAI,OAAM,AAAC,CAAC,iBAAgB,CAAC,CAAG;AAC9B,sBAAgB,EAAI,IAAI,kCAAgC,AAAC,CAAC,GAAI,iBAAe,AAAC,CAAC,WAAU,CAAC,CAAG,KAAG,CAAC,CAAC;IACpG;AAAA,AACI,MAAA,CAAA,QAAO,EAAI,IAAI,SAAO,AAAC,CAAC,GAAI,mBAAiB,AAAC,CAAC,MAAK,CAAG,kBAAgB,CAAC,CAAG,IAAI,mBAAiB,AAAC,CAAC,WAAU,CAAG,QAAM,CAAC,CAAC,CAAC;AAE5H,OAAI,OAAM,AAAC,CAAC,iBAAgB,CAAC,CAAG;AAC9B,sBAAgB,EAAI,EAAA,CAAC;IACvB;AAAA,AACA,OAAI,OAAM,AAAC,CAAC,OAAM,CAAC,CAAG;AACpB,YAAM,EAAI,CAAA,UAAS,OAAO,AAAC,EAAC,CAAC;IAC/B;AAAA,AACA,OAAG,YAAY,EAAI,IAAI,uBAAqB,AAAC,EAAC,CAAC;AAC/C,AAAI,MAAA,CAAA,YAAW,EAAI,IAAI,aAAW,AAAC,CAAC,CAAC,IAAG,YAAY,CAAC,CAAG,IAAI,eAAa,AAAC,EAAC,CAAC,CAAC;AAC7E,AAAI,MAAA,CAAA,WAAU,EAAI,IAAI,YAAU,AAAC,CAAC,iBAAgB,CAAG,aAAW,CAAG,kBAAgB,CAAC,CAAC;AACrF,OAAG,SAAS,EAAI,IAAI,kBAAgB,AAAC,CAAC,QAAO,CAAG,YAAU,CAAG,kBAAgB,CAAC,CAAC;AAE/E,OAAG,OAAO,EAAI,CAAA,EAAC,AAAC,CAAC,aAAY,CAAC,CAAC;AAC/B,OAAG,iBAAiB,EAAI,CAAA,IAAG,SAAS,oBAAoB,AAAC,CAAC,IAAG,OAAO,CAAC,CAAC;EACxE;AAAA,AAEA,QAAM,CAAE,YAAW,CAAG,CAAA,UAAS,CAA+B;AAC5D,SAAO,CAAA,IAAG,gBAAgB,AAAC,CAAC,GAAI,SAAO,AAAC,CAAC;AACvC,gBAAU,CAAG,OAAK;AAClB,WAAK,CAAG,aAAW;AACnB,eAAS,CAAG,WAAS;AAAA,IACvB,CAAC,CAAC,KAAK,AAAC,CAAE,CAAC,aAAY,IAAM;AAC3B,WAAO,CAAA,IAAG,aAAa,AAAC,CAAC,CACvB,IAAG,SAAS,8BAA8B,AAAC,CAAC,IAAG,iBAAiB,CAAG,EAAC,aAAY,CAAE,CAAA,CAAC,CAAC,CAAC,CACrF,cAAY,CACd,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;AAAA,AAEA,gBAAc,CAAE,QAAO,CAA+B;AACpD,AAAI,MAAA,CAAA,MAAK,EAAI,CAAA,UAAS,IAAI,AAAC,CAAC,IAAG,cAAc,CAAG,CAAA,QAAO,YAAY,CAAC,CAAC;AACrE,OAAI,SAAQ,AAAC,CAAC,MAAK,CAAC,CAAG;AACrB,WAAO,OAAK,CAAC;IACf;AAAA,AACA,SAAK,EAAI,CAAA,IAAG,SAAS,QAAQ,AAAC,CAAC,QAAO,CAAC,KAAK,AAAC,CAAE,CAAC,EAAC,IAAM;AACrD,AAAI,QAAA,CAAA,sBAAqB,EAAI,CAAA,WAAU,IAAI,AAAC,CAC1C,IAAG,wBAAwB,AAAC,CAAC,QAAO,CAAG,GAAC,CAAC,CACzC,EAAC,WAAU,IAAM;AACf,AAAI,UAAA,CAAA,aAAY,EAAI,CAAA,UAAS,IAAI,AAAC,CAAC,IAAG,WAAW,CAAG,YAAU,CAAC,CAAC;AAChE,WAAI,OAAM,AAAC,CAAC,aAAY,CAAC,CAAG;AAC1B,cAAM,IAAI,cAAY,AAAC,CAAC,+BAA+B,WAAU,GAAG,CAAC,CAAC;QACxE;AAAA,AACA,aAAO,CAAA,IAAG,gBAAgB,AAAC,CAAC,aAAY,CAAC,CAAC;MAC5C,CACF,CAAC;AACD,WAAO,CAAA,cAAa,IAAI,AAAC,CAAC,sBAAqB,CAAC,KAAK,AAAC,CACpD,CAAC,yBAAwB,IAAM;AAC7B,AAAI,UAAA,CAAA,aAAY,EACd,CAAA,WAAU,IAAI,AAAC,CAAC,yBAAwB,CAAG,EAAC,GAAE,IAAM,CAAA,GAAE,CAAE,CAAA,CAAC,CAAC,CAAC;AAC7D,aAAO,CAAA,IAAG,aAAa,AAAC,CAAC,CACvB,IAAG,SAAS,8BAA8B,AAAC,CAAC,EAAC,OAAO,CAAG,cAAY,CAAC,CACpE,0BAAwB,CAC1B,CAAC,CAAC;MACJ,CACF,CAAC;IACH,CAAC,CAAC;AACF,aAAS,IAAI,AAAC,CAAC,IAAG,cAAc,CAAG,CAAA,QAAO,YAAY,CAAG,OAAK,CAAC,CAAC;AAChE,SAAO,OAAK,CAAC;EACf;AAAA,AAEA,wBAAsB,CAAE,QAAO,CAAG,CAAA,EAAC,CAAG,CAAA,MAAK,EAAI,KAAG,CAAgB;AAChE,OAAI,OAAM,AAAC,CAAC,MAAK,CAAC,CAAG;AACnB,WAAK,EAAI,GAAC,CAAC;IACb;AAAA,AACA,QAAS,GAAA,CAAA,SAAQ,EAAE,EAAA,CAAG,CAAA,SAAQ,EAAE,CAAA,EAAC,eAAe,OAAO,CAAG,CAAA,SAAQ,EAAE,CAAG;AACrE,AAAI,QAAA,CAAA,EAAC,EAAI,CAAA,EAAC,eAAe,CAAE,SAAQ,CAAC,CAAC;AACrC,AAAI,QAAA,CAAA,kBAAiB,CAAC;AACtB,gBAAU,QAAQ,AAAC,CAAC,EAAC,WAAW,CAAG,EAAC,EAAC,IAAM;AACzC,AAAI,UAAA,CAAA,IAAG,EAAI,CAAA,QAAO,WAAW,CAAE,EAAC,eAAe,CAAC,CAAC;AACjD,WAAI,IAAG,KAAK,IAAM,CAAA,iBAAgB,eAAe,CAAG;AAClD,2BAAiB,EAAI,KAAG,CAAC;QAC3B;AAAA,MACF,CAAC,CAAC;AACF,SAAI,SAAQ,AAAC,CAAC,kBAAiB,CAAC,CAAG;AACjC,kBAAU,KAAK,AAAC,CAAC,MAAK,CAAG,CAAA,kBAAiB,GAAG,CAAC,CAAC;MACjD,KAAO,KAAI,SAAQ,AAAC,CAAC,EAAC,gBAAgB,CAAC,CAAG;AACxC,WAAG,wBAAwB,AAAC,CAAC,QAAO,CAAG,CAAA,EAAC,gBAAgB,CAAG,OAAK,CAAC,CAAC;MACpE;AAAA,IACF;AAAA,AACA,SAAO,OAAK,CAAC;EACf;AAAA,AAEA,aAAW,CAAE,IAAG,AAAK,CAAG,CAAA,GAAE,EAAS,KAAG,CAAQ;AAC5C,OAAI,OAAM,AAAC,CAAC,GAAE,CAAC,CAAG;AAChB,QAAE,EAAI,GAAC,CAAC;IACV;AAAA,AACA,QAAS,GAAA,CAAA,CAAA,EAAI,EAAA,CAAG,CAAA,CAAA,EAAI,CAAA,IAAG,OAAO,CAAG,CAAA,CAAA,EAAE,CAAG;AACpC,AAAI,QAAA,CAAA,IAAG,EAAI,CAAA,IAAG,CAAE,CAAA,CAAC,CAAC;AAClB,SAAI,WAAU,OAAO,AAAC,CAAC,IAAG,CAAC,CAAG;AAC5B,WAAG,aAAa,AAAC,CAAC,IAAG,CAAG,IAAE,CAAC,CAAC;MAC9B,KAAO;AACL,kBAAU,KAAK,AAAC,CAAC,GAAE,CAAG,KAAG,CAAC,CAAC;MAC7B;AAAA,IACF;AAAA,AACA,SAAO,IAAE,CAAC;EACZ;AAAA,AAEF;AAAA,AA9IA,KAAK,eAAe,AAAC,yDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YA8HN,IAAG,IAAO,IAAG,GA9HgB;EAAC,CAAC,CAAC,CAAC;AAgJrD,IAAM,mBAAiB,QAAU,eAAa;AAG5C,YAAU,CAAE,WAAU,CAAG,CAAA,OAAM,CAAG;AAChC,QAAI,AAAC,CAAC,IAAG,CAAG,YAAU,CAAC,CAAC;AACxB,OAAG,SAAS,EAAI,QAAM,CAAC;EACzB;AAAA,AAEA,KAAG,CAAE,QAAO,AAAU,CAAG;AACvB,OAAI,SAAQ,AAAC,CAAC,QAAO,OAAO,CAAC,CAAG;AAC9B,WAAO,CAAA,cAAa,QAAQ,AAAC,CAAC,GAAE,eAAe,AAAC,CAAC,QAAO,OAAO,CAAC,CAAC,CAAC;IACpE;AAAA,AAEA,OAAI,SAAQ,AAAC,CAAC,QAAO,OAAO,CAAC,CAAG;AAC9B,AAAI,QAAA,CAAA,OAAM,EAAI,CAAA,IAAG,SAAS,CAAE,QAAO,OAAO,CAAC,CAAC;AAC5C,SAAI,SAAQ,AAAC,CAAC,OAAM,CAAC,CAAG;AACtB,aAAO,CAAA,cAAa,QAAQ,AAAC,CAAC,GAAE,eAAe,AAAC,CAAC,OAAM,CAAC,CAAC,CAAC;MAC5D;AAAA,IACF;AAAA,AAEA,SAAO,CAAA,cAAa,OAAO,AAAC,CAAC,aAAY,CAAC,CAAC;EAC7C;AAAA,AACF;AAvKA,KAAK,eAAe,AAAC,iDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAwJT,QAAO,GAxJyB;EAAC,CAAC,CAAC,CAAC;AAwKrD,KAAO,MAAM,eAAa,QAAU,WAAS;AAC3C,YAAU,CAAE,AAAD,CAAG;AACZ,QAAI,AAAC,CAAC,CAAC,oBAAmB,CAAG,MAAI,CAAC,CAAC,CAAC;EACtC;AAAA,AAEA,IAAE,CAAE,EAAC,CAAG;AACN,KAAC,AAAC,EAAC,CAAC;EACN;AAAA,AAEA,kBAAgB,CAAE,EAAC,CAAG;AACpB,KAAC,AAAC,EAAC,CAAC;EACN;AAAA,AACF;AAAA,AAEA,KAAO,MAAM,uBAAqB,QAAU,mBAAiB;AAG3D,YAAU,CAAE,AAAD,CAAG;AACZ,QAAI,AAAC,EAAC,CAAC;AACP,OAAG,eAAe,EAAI,CAAA,UAAS,OAAO,AAAC,EAAC,CAAC;EAC3C;AAAA,AAEA,cAAY,CAAE,SAAQ,CAAG,CAAA,KAAI,CAAG;AAC9B,aAAS,IAAI,AAAC,CAAC,IAAG,eAAe,CAAG,UAAQ,CAAC,AAAC,CAAC,KAAI,CAAC,CAAC;EACvD;AAAA,AAEA,SAAO,CAAE,SAAQ,AAAQ,CAAY;AACnC,SAAO,KAAG,CAAC;EACb;AAAA,AAEA,iBAAe,CAAE,OAAM,CAAG,CAAA,SAAQ,AAAQ,CAAG,CAAA,OAAM,AAAU,CAAG,CAAA,mBAAkB,AAAS,CAAG;AAC5F,aAAS,IAAI,AAAC,CAAC,IAAG,eAAe,CAAG,UAAQ,CAAG,QAAM,CAAC,CAAC;EACzD;AAAA,AACF;AAAA,AA1MA,KAAK,eAAe,AAAC,yDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,MAAK,KAAgB,UAC4B;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,iEACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,gBAD1B,MAAK,KAAgB,WAuMmC,QAAO,IAvM/D,MAAK,KAAgB,WAC4B;EAAC,CAAC,CAAC,CAAC;AA2MrD,KAAO,MAAM,uBAAqB,QAAU,gBAAc;AAExD,YAAU,CAAE,AAAD,CAAG;AACZ,QAAI,AAAC,EAAC,CAAC;AACP,OAAG,IAAI,EAAI,GAAC,CAAC;EACf;AAAA,AACA,cAAY,CACV,YAAW,AAAO,CAAG,CAAA,SAAQ,AAAO,CAAG,CAAA,MAAK,AAAU,CACtD;AACA,cAAU,KAAK,AAAC,CAAC,IAAG,IAAI,CAAG,EAAC,YAAW,CAAG,UAAQ,CAAG,OAAK,CAAC,CAAC,CAAC;EAC/D;AAAA,AACF;AAAA,AAvNA,KAAK,eAAe,AAAC,8DACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,MAAK,KAAgB,WAArB,MAAK,KAAgB,WAArB,MAAK,YAAuB,AAmNsB,CAAA,IAAG,CAnNrD,CAAA,MAAK,KAAgB,KAmNqC,AAnNX,GACE;EAAC,CAAC,CAAC,CAAC;AAwNrD,KAAO,MAAM,UAAQ;AAEnB,YAAU,CAAE,MAAK,CAAG;AAClB,OAAG,OAAO,EAAI,OAAK,CAAC;EACtB;AAAA,AACF;AAAA","file":"/home/korchev/github/angular/modules/angular2/test/render/dom/integration_testbed.js","sourcesContent":["import {\n  el\n} from 'angular2/test_lib';\n\nimport {isBlank, isPresent, BaseException} from 'angular2/src/facade/lang';\nimport {MapWrapper, ListWrapper, List} from 'angular2/src/facade/collection';\nimport {PromiseWrapper, Promise} from 'angular2/src/facade/async';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\n\nimport {Parser, Lexer} from 'angular2/change_detection';\nimport {DirectDomRenderer} from 'angular2/src/render/dom/direct_dom_renderer';\nimport {Compiler} from 'angular2/src/render/dom/compiler/compiler';\nimport {ProtoViewRef, ProtoView, Template, ViewContainerRef, EventDispatcher, DirectiveMetadata} from 'angular2/src/render/api';\nimport {DefaultStepFactory} from 'angular2/src/render/dom/compiler/compile_step_factory';\nimport {TemplateLoader} from 'angular2/src/render/dom/compiler/template_loader';\nimport {UrlResolver} from 'angular2/src/services/url_resolver';\nimport {EmulatedUnscopedShadowDomStrategy} from 'angular2/src/render/dom/shadow_dom/emulated_unscoped_shadow_dom_strategy';\nimport {EventManager, EventManagerPlugin} from 'angular2/src/render/dom/events/event_manager';\nimport {VmTurnZone} from 'angular2/src/core/zone/vm_turn_zone';\nimport {StyleUrlResolver} from 'angular2/src/render/dom/shadow_dom/style_url_resolver';\nimport {ViewFactory} from 'angular2/src/render/dom/view/view_factory';\n\nexport class IntegrationTestbed {\n  renderer;\n  parser;\n  rootEl;\n  rootProtoViewRef;\n  eventPlugin;\n  _templates:Map<string, Template>;\n  _compileCache:Map<string, Promise<List>>;\n\n  constructor({urlData, viewCacheCapacity, shadowDomStrategy, templates}) {\n    this._templates = MapWrapper.create();\n    if (isPresent(templates)) {\n      ListWrapper.forEach(templates, (template) => {\n        MapWrapper.set(this._templates, template.componentId, template);\n      });\n    }\n    this._compileCache = MapWrapper.create();\n    var parser = new Parser(new Lexer());\n    var urlResolver = new UrlResolver();\n    if (isBlank(shadowDomStrategy)) {\n      shadowDomStrategy = new EmulatedUnscopedShadowDomStrategy(new StyleUrlResolver(urlResolver), null);\n    }\n    var compiler = new Compiler(new DefaultStepFactory(parser, shadowDomStrategy), new FakeTemplateLoader(urlResolver, urlData));\n\n    if (isBlank(viewCacheCapacity)) {\n      viewCacheCapacity = 1;\n    }\n    if (isBlank(urlData)) {\n      urlData = MapWrapper.create();\n    }\n    this.eventPlugin = new FakeEventManagerPlugin();\n    var eventManager = new EventManager([this.eventPlugin], new FakeVmTurnZone());\n    var viewFactory = new ViewFactory(viewCacheCapacity, eventManager, shadowDomStrategy);\n    this.renderer = new DirectDomRenderer(compiler, viewFactory, shadowDomStrategy);\n\n    this.rootEl = el('<div></div>');\n    this.rootProtoViewRef = this.renderer.createRootProtoView(this.rootEl);\n  }\n\n  compile(templateHtml, directives):Promise<List<ProtoViewRef>> {\n    return this._compileRecurse(new Template({\n      componentId: 'root',\n      inline: templateHtml,\n      directives: directives\n    })).then( (protoViewRefs) => {\n      return this._flattenList([\n        this.renderer.mergeChildComponentProtoViews(this.rootProtoViewRef, [protoViewRefs[0]]),\n        protoViewRefs\n      ]);\n    });\n  }\n\n  _compileRecurse(template):Promise<List<ProtoViewRef>> {\n    var result = MapWrapper.get(this._compileCache, template.componentId);\n    if (isPresent(result)) {\n      return result;\n    }\n    result = this.renderer.compile(template).then( (pv) => {\n      var childComponentPromises = ListWrapper.map(\n        this._findNestedComponentIds(template, pv),\n        (componentId) => {\n          var childTemplate = MapWrapper.get(this._templates, componentId);\n          if (isBlank(childTemplate)) {\n            throw new BaseException(`Could not find template for ${componentId}!`);\n          }\n          return this._compileRecurse(childTemplate);\n        }\n      );\n      return PromiseWrapper.all(childComponentPromises).then(\n        (protoViewRefsWithChildren) => {\n          var protoViewRefs =\n            ListWrapper.map(protoViewRefsWithChildren, (arr) => arr[0]);\n          return this._flattenList([\n            this.renderer.mergeChildComponentProtoViews(pv.render, protoViewRefs),\n            protoViewRefsWithChildren\n          ]);\n        }\n      );\n    });\n    MapWrapper.set(this._compileCache, template.componentId, result);\n    return result;\n  }\n\n  _findNestedComponentIds(template, pv, target = null):List<string> {\n    if (isBlank(target)) {\n      target = [];\n    }\n    for (var binderIdx=0; binderIdx<pv.elementBinders.length; binderIdx++) {\n      var eb = pv.elementBinders[binderIdx];\n      var componentDirective;\n      ListWrapper.forEach(eb.directives, (db) => {\n        var meta = template.directives[db.directiveIndex];\n        if (meta.type === DirectiveMetadata.COMPONENT_TYPE) {\n          componentDirective = meta;\n        }\n      });\n      if (isPresent(componentDirective)) {\n        ListWrapper.push(target, componentDirective.id);\n      } else if (isPresent(eb.nestedProtoView)) {\n        this._findNestedComponentIds(template, eb.nestedProtoView, target);\n      }\n    }\n    return target;\n  }\n\n  _flattenList(tree:List, out:List = null):List {\n    if (isBlank(out)) {\n      out = [];\n    }\n    for (var i = 0; i < tree.length; i++) {\n      var item = tree[i];\n      if (ListWrapper.isList(item)) {\n        this._flattenList(item, out);\n      } else {\n        ListWrapper.push(out, item);\n      }\n    }\n    return out;\n  }\n\n}\n\n\nclass FakeTemplateLoader extends TemplateLoader {\n  _urlData: Map<string, string>;\n\n  constructor(urlResolver, urlData) {\n    super(null, urlResolver);\n    this._urlData = urlData;\n  }\n\n  load(template: Template) {\n    if (isPresent(template.inline)) {\n      return PromiseWrapper.resolve(DOM.createTemplate(template.inline));\n    }\n\n    if (isPresent(template.absUrl)) {\n      var content = this._urlData[template.absUrl];\n      if (isPresent(content)) {\n        return PromiseWrapper.resolve(DOM.createTemplate(content));\n      }\n    }\n\n    return PromiseWrapper.reject('Load failed');\n  }\n}\n\nexport class FakeVmTurnZone extends VmTurnZone {\n  constructor() {\n    super({enableLongStackTrace: false});\n  }\n\n  run(fn) {\n    fn();\n  }\n\n  runOutsideAngular(fn) {\n    fn();\n  }\n}\n\nexport class FakeEventManagerPlugin extends EventManagerPlugin {\n  _eventHandlers: Map;\n\n  constructor() {\n    super();\n    this._eventHandlers = MapWrapper.create();\n  }\n\n  dispatchEvent(eventName, event) {\n    MapWrapper.get(this._eventHandlers, eventName)(event);\n  }\n\n  supports(eventName: string): boolean {\n    return true;\n  }\n\n  addEventListener(element, eventName: string, handler: Function, shouldSupportBubble: boolean) {\n    MapWrapper.set(this._eventHandlers, eventName, handler);\n  }\n}\n\nexport class LoggingEventDispatcher extends EventDispatcher {\n  log:List;\n  constructor() {\n    super();\n    this.log = [];\n  }\n  dispatchEvent(\n    elementIndex:number, eventName:string, locals:List<any>\n  ) {\n    ListWrapper.push(this.log, [elementIndex, eventName, locals]);\n  }\n}\n\nexport class FakeEvent {\n  target;\n  constructor(target) {\n    this.target = target;\n  }\n}"]}