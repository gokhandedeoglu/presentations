{"version":3,"sources":["shadow_dom_emulation_integration_spec.js"],"names":[],"mappings":"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","file":"/home/korchev/github/angular/modules/angular2/test/render/dom/shadow_dom_emulation_integration_spec.js","sourcesContent":["import {\n  AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  describe,\n  el,\n  elementText,\n  expect,\n  iit,\n  inject,\n  it,\n  xit,\n  SpyObject,\n} from 'angular2/test_lib';\n\nimport {MapWrapper, ListWrapper, StringMapWrapper} from 'angular2/src/facade/collection';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\n\nimport {\n  ProtoView, Template, ViewContainerRef, DirectiveMetadata\n} from 'angular2/src/render/api';\n\nimport {EmulatedScopedShadowDomStrategy} from 'angular2/src/render/dom/shadow_dom/emulated_scoped_shadow_dom_strategy';\nimport {EmulatedUnscopedShadowDomStrategy} from 'angular2/src/render/dom/shadow_dom/emulated_unscoped_shadow_dom_strategy';\nimport {NativeShadowDomStrategy} from 'angular2/src/render/dom/shadow_dom/native_shadow_dom_strategy';\nimport {UrlResolver} from 'angular2/src/services/url_resolver';\nimport {StyleUrlResolver} from 'angular2/src/render/dom/shadow_dom/style_url_resolver';\nimport {StyleInliner} from 'angular2/src/render/dom/shadow_dom/style_inliner';\n\nimport {IntegrationTestbed} from './integration_testbed';\n\nexport function main() {\n  describe('ShadowDom integration tests', function() {\n    var urlResolver, styleUrlResolver, styleInliner;\n    var strategies = {\n      \"scoped\" : () => new EmulatedScopedShadowDomStrategy(styleInliner, styleUrlResolver, null),\n      \"unscoped\" : () => new EmulatedUnscopedShadowDomStrategy(styleUrlResolver, null)\n    }\n    if (DOM.supportsNativeShadowDOM()) {\n      StringMapWrapper.set(strategies, \"native\", () => new NativeShadowDomStrategy(styleUrlResolver));\n    }\n\n    StringMapWrapper.forEach(strategies,\n      (strategyFactory, name) => {\n\n      describe(`${name} shadow dom strategy`, () => {\n\n        var testbed, renderer, rootEl, compile, strategy;\n\n        beforeEach( () => {\n          urlResolver = new UrlResolver();\n          styleUrlResolver = new StyleUrlResolver(urlResolver);\n          styleInliner = new StyleInliner(null, styleUrlResolver, urlResolver);\n          strategy = strategyFactory();\n          testbed = new IntegrationTestbed({\n            shadowDomStrategy: strategy,\n            templates: templates\n          });\n          renderer = testbed.renderer;\n          rootEl = testbed.rootEl;\n          compile = (template, directives) => testbed.compile(template, directives);\n        });\n\n        it('should support simple components', inject([AsyncTestCompleter], (async) => {\n          var temp = '<simple>' +\n              '<div>A</div>' +\n              '</simple>';\n\n          compile(temp, [simple]).then( (pvRefs) => {\n            renderer.createView(pvRefs[0]);\n\n            expect(rootEl).toHaveText('SIMPLE(A)');\n\n            async.done();\n          });\n        }));\n\n        it('should support multiple content tags', inject([AsyncTestCompleter], (async) => {\n          var temp = '<multiple-content-tags>' +\n            '<div>B</div>' +\n            '<div>C</div>' +\n            '<div class=\"left\">A</div>' +\n          '</multiple-content-tags>';\n\n          compile(temp, [multipleContentTagsComponent]).then( (pvRefs) => {\n            renderer.createView(pvRefs[0]);\n\n            expect(rootEl).toHaveText('(A, BC)');\n\n            async.done();\n          });\n        }));\n\n        it('should redistribute only direct children', inject([AsyncTestCompleter], (async) => {\n          var temp = '<multiple-content-tags>' +\n            '<div>B<div class=\"left\">A</div></div>' +\n            '<div>C</div>' +\n            '</multiple-content-tags>';\n\n          compile(temp, [multipleContentTagsComponent]).then( (pvRefs) => {\n            renderer.createView(pvRefs[0]);\n\n            expect(rootEl).toHaveText('(, BAC)');\n\n            async.done();\n          });\n        }));\n\n        it(\"should redistribute direct child viewcontainers when the light dom changes\", inject([AsyncTestCompleter], (async) => {\n          var temp = '<multiple-content-tags>' +\n            '<div><div template=\"manual\" class=\"left\">A</div></div>' +\n            '<div>B</div>' +\n            '</multiple-content-tags>';\n\n          compile(temp, [multipleContentTagsComponent, manualViewportDirective]).then( (pvRefs) => {\n            var viewRefs = renderer.createView(pvRefs[0]);\n            var vcRef = new ViewContainerRef(viewRefs[1], 1);\n            var vcProtoViewRef = pvRefs[2];\n            var childViewRef = renderer.createView(vcProtoViewRef)[0];\n\n            expect(rootEl).toHaveText('(, B)');\n\n            renderer.insertViewIntoContainer(vcRef, childViewRef);\n\n            expect(rootEl).toHaveText('(, AB)');\n\n            renderer.detachViewFromContainer(vcRef, 0);\n\n            expect(rootEl).toHaveText('(, B)');\n\n            async.done();\n          });\n        }));\n\n        it(\"should redistribute when the light dom changes\", inject([AsyncTestCompleter], (async) => {\n          var temp = '<multiple-content-tags>' +\n            '<div template=\"manual\" class=\"left\">A</div>' +\n            '<div>B</div>' +\n            '</multiple-content-tags>';\n\n          compile(temp, [multipleContentTagsComponent, manualViewportDirective]).then( (pvRefs) => {\n            var viewRefs = renderer.createView(pvRefs[0]);\n            var vcRef = new ViewContainerRef(viewRefs[1], 1);\n            var vcProtoViewRef = pvRefs[2];\n            var childViewRef = renderer.createView(vcProtoViewRef)[0];\n\n            expect(rootEl).toHaveText('(, B)');\n\n            renderer.insertViewIntoContainer(vcRef, childViewRef);\n\n            expect(rootEl).toHaveText('(A, B)');\n\n            renderer.detachViewFromContainer(vcRef, 0);\n\n            expect(rootEl).toHaveText('(, B)');\n\n            async.done();\n          });\n        }));\n\n        it(\"should support nested components\", inject([AsyncTestCompleter], (async) => {\n          var temp = '<outer-with-indirect-nested>' +\n            '<div>A</div>' +\n            '<div>B</div>' +\n            '</outer-with-indirect-nested>';\n\n          compile(temp, [outerWithIndirectNestedComponent]).then( (pvRefs) => {\n            renderer.createView(pvRefs[0]);\n\n            expect(rootEl).toHaveText('OUTER(SIMPLE(AB))');\n\n            async.done();\n          });\n        }));\n\n        it(\"should support nesting with content being direct child of a nested component\", inject([AsyncTestCompleter], (async) => {\n          var temp = '<outer>' +\n            '<div template=\"manual\" class=\"left\">A</div>' +\n            '<div>B</div>' +\n            '<div>C</div>' +\n            '</outer>';\n\n          compile(temp, [outerComponent, manualViewportDirective]).then( (pvRefs) => {\n            var viewRefs = renderer.createView(pvRefs[0]);\n            var vcRef = new ViewContainerRef(viewRefs[1], 1);\n            var vcProtoViewRef = pvRefs[2];\n            var childViewRef = renderer.createView(vcProtoViewRef)[0];\n\n            expect(rootEl).toHaveText('OUTER(INNER(INNERINNER(,BC)))');\n\n            renderer.insertViewIntoContainer(vcRef, childViewRef);\n\n            expect(rootEl).toHaveText('OUTER(INNER(INNERINNER(A,BC)))');\n            async.done();\n          });\n        }));\n\n        it('should redistribute when the shadow dom changes', inject([AsyncTestCompleter], (async) => {\n          var temp = '<conditional-content>' +\n            '<div class=\"left\">A</div>' +\n            '<div>B</div>' +\n            '<div>C</div>' +\n            '</conditional-content>';\n\n          compile(temp, [conditionalContentComponent, autoViewportDirective]).then( (pvRefs) => {\n            var viewRefs = renderer.createView(pvRefs[0]);\n            var vcRef = new ViewContainerRef(viewRefs[2], 0);\n            var vcProtoViewRef = pvRefs[3];\n            var childViewRef = renderer.createView(vcProtoViewRef)[0];\n\n            expect(rootEl).toHaveText('(, ABC)');\n\n            renderer.insertViewIntoContainer(vcRef, childViewRef);\n\n            expect(rootEl).toHaveText('(A, BC)');\n\n            renderer.detachViewFromContainer(vcRef, 0);\n\n            expect(rootEl).toHaveText('(, ABC)');\n\n            async.done();\n          });\n        }));\n\n        //Implement once NgElement support changing a class\n        //it(\"should redistribute when a class has been added or removed\");\n        //it('should not lose focus', () => {\n        //  var temp = `<simple>aaa<input type=\"text\" id=\"focused-input\" ng-class=\"{'aClass' : showClass}\"> bbb</simple>`;\n        //\n        //  compile(temp, (view, lc) => {\n        //    var input = view.nodes[1];\n        //    input.focus();\n        //\n        //    expect(document.activeElement.id).toEqual(\"focused-input\");\n        //\n        //    // update class of input\n        //\n        //    expect(document.activeElement.id).toEqual(\"focused-input\");\n        //  });\n        //});\n      });\n    });\n\n  });\n}\n\n\nvar simple = new DirectiveMetadata({\n  selector: 'simple',\n  id: 'simple',\n  type: DirectiveMetadata.COMPONENT_TYPE\n});\n\nvar multipleContentTagsComponent = new DirectiveMetadata({\n  selector: 'multiple-content-tags',\n  id: 'multiple-content-tags',\n  type: DirectiveMetadata.COMPONENT_TYPE\n});\n\nvar manualViewportDirective = new DirectiveMetadata({\n  selector: '[manual]',\n  id: 'manual',\n  type: DirectiveMetadata.VIEWPORT_TYPE\n});\n\nvar outerWithIndirectNestedComponent = new DirectiveMetadata({\n  selector: 'outer-with-indirect-nested',\n  id: 'outer-with-indirect-nested',\n  type: DirectiveMetadata.COMPONENT_TYPE\n});\n\nvar outerComponent = new DirectiveMetadata({\n  selector: 'outer',\n  id: 'outer',\n  type: DirectiveMetadata.COMPONENT_TYPE\n});\n\nvar innerComponent = new DirectiveMetadata({\n  selector: 'inner',\n  id: 'inner',\n  type: DirectiveMetadata.COMPONENT_TYPE\n});\n\nvar innerInnerComponent = new DirectiveMetadata({\n  selector: 'innerinner',\n  id: 'innerinner',\n  type: DirectiveMetadata.COMPONENT_TYPE\n});\n\nvar conditionalContentComponent = new DirectiveMetadata({\n  selector: 'conditional-content',\n  id: 'conditional-content',\n  type: DirectiveMetadata.COMPONENT_TYPE\n});\n\nvar autoViewportDirective = new DirectiveMetadata({\n  selector: '[auto]',\n  id: '[auto]',\n  type: DirectiveMetadata.VIEWPORT_TYPE\n});\n\nvar templates = [\n  new Template({\n    componentId: 'simple',\n    inline: 'SIMPLE(<content></content>)',\n    directives: []\n  }),\n  new Template({\n    componentId: 'multiple-content-tags',\n    inline: '(<content select=\".left\"></content>, <content></content>)',\n    directives: []\n  }),\n  new Template({\n    componentId: 'outer-with-indirect-nested',\n    inline: 'OUTER(<simple><div><content></content></div></simple>)',\n    directives: [simple]\n  }),\n  new Template({\n    componentId: 'outer',\n    inline: 'OUTER(<inner><content></content></inner>)',\n    directives: [innerComponent]\n  }),\n  new Template({\n    componentId: 'inner',\n    inline: 'INNER(<innerinner><content></content></innerinner>)',\n    directives: [innerInnerComponent]\n  }),\n  new Template({\n    componentId: 'innerinner',\n    inline: 'INNERINNER(<content select=\".left\"></content>,<content></content>)',\n    directives: []\n  }),\n  new Template({\n    componentId: 'conditional-content',\n    inline: '<div>(<div *auto=\"cond\"><content select=\".left\"></content></div>, <content></content>)</div>',\n    directives: [autoViewportDirective]\n  })\n];\n"]}