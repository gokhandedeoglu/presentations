{"version":3,"sources":["compiler.js"],"names":[],"mappings":"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","file":"/home/korchev/github/angular/modules/angular2/src/core/compiler/compiler.js","sourcesContent":["import {Injectable} from 'angular2/di';\nimport {Type, isBlank, isPresent, BaseException, normalizeBlank, stringify} from 'angular2/src/facade/lang';\nimport {Promise, PromiseWrapper} from 'angular2/src/facade/async';\nimport {List, ListWrapper, Map, MapWrapper} from 'angular2/src/facade/collection';\n\nimport {ChangeDetection, Parser} from 'angular2/change_detection';\n\nimport {DirectiveMetadataReader} from './directive_metadata_reader';\nimport {Component, Viewport, DynamicComponent, Decorator} from '../annotations/annotations';\nimport {ProtoView} from './view';\nimport {DirectiveBinding} from './element_injector';\nimport {TemplateResolver} from './template_resolver';\nimport {Template} from '../annotations/template';\nimport {ShadowDomStrategy} from './shadow_dom_strategy';\nimport {ComponentUrlMapper} from './component_url_mapper';\nimport {ProtoViewFactory} from './proto_view_factory';\nimport {UrlResolver} from 'angular2/src/services/url_resolver';\n\nimport {TemplateLoader} from 'angular2/src/render/dom/compiler/template_loader';\nimport {DefaultStepFactory} from 'angular2/src/render/dom/compiler/compile_step_factory';\nimport {DirectDomRenderer} from 'angular2/src/render/dom/direct_dom_renderer';\n\nimport * as rc from 'angular2/src/render/dom/compiler/compiler';\nimport * as renderApi from 'angular2/src/render/api';\n\n/**\n * Cache that stores the ProtoView of the template of a component.\n * Used to prevent duplicate work and resolve cyclic dependencies.\n */\n@Injectable()\nexport class CompilerCache {\n  _cache:Map;\n  constructor() {\n    this._cache = MapWrapper.create();\n  }\n\n  set(component:Type, protoView:ProtoView) {\n    MapWrapper.set(this._cache, component, protoView);\n  }\n\n  get(component:Type):ProtoView {\n    var result = MapWrapper.get(this._cache, component);\n    return normalizeBlank(result);\n  }\n\n  clear() {\n    MapWrapper.clear(this._cache);\n  }\n}\n\n\n// TODO(tbosch): rename this class to Compiler\n// and remove the current Compiler when core uses the render views.\nexport class NewCompiler {\n  _reader: DirectiveMetadataReader;\n  _compilerCache:CompilerCache;\n  _compiling:Map<Type, Promise>;\n  _templateResolver: TemplateResolver;\n  _componentUrlMapper: ComponentUrlMapper;\n  _urlResolver: UrlResolver;\n  _appUrl: string;\n  _renderer: renderApi.Renderer;\n  _protoViewFactory:ProtoViewFactory;\n\n  constructor(reader: DirectiveMetadataReader,\n              cache:CompilerCache,\n              templateResolver: TemplateResolver,\n              componentUrlMapper: ComponentUrlMapper,\n              urlResolver: UrlResolver,\n              renderer: renderApi.Renderer,\n              protoViewFactory: ProtoViewFactory) {\n    this._reader = reader;\n    this._compilerCache = cache;\n    this._compiling = MapWrapper.create();\n    this._templateResolver = templateResolver;\n    this._componentUrlMapper = componentUrlMapper;\n    this._urlResolver = urlResolver;\n    this._appUrl = urlResolver.resolve(null, './');\n    this._renderer = renderer;\n    this._protoViewFactory = protoViewFactory;\n  }\n\n  _bindDirective(directive) {\n    var meta = this._reader.read(directive);\n    return DirectiveBinding.createFromType(meta.type, meta.annotation);\n  }\n\n  compile(component: Type):Promise<ProtoView> {\n    var protoView = this._compile(this._bindDirective(component));\n    return PromiseWrapper.isPromise(protoView) ? protoView : PromiseWrapper.resolve(protoView);\n  }\n\n  // TODO(vicb): union type return ProtoView or Promise<ProtoView>\n  _compile(componentBinding: DirectiveBinding) {\n    var component = componentBinding.key.token;\n    var protoView = this._compilerCache.get(component);\n    if (isPresent(protoView)) {\n      // The component has already been compiled into a ProtoView,\n      // returns a resolved Promise.\n      return protoView;\n    }\n\n    var pvPromise = MapWrapper.get(this._compiling, component);\n    if (isPresent(pvPromise)) {\n      // The component is already being compiled, attach to the existing Promise\n      // instead of re-compiling the component.\n      // It happens when a template references a component multiple times.\n      return pvPromise;\n    }\n\n    var template = this._templateResolver.resolve(component);\n    var directives = ListWrapper.map(\n      this._flattenDirectives(template),\n      (directive) => this._bindDirective(directive)\n    );\n\n    pvPromise = this._compileNoRecurse(componentBinding, template, directives).then( (protoView) => {\n      // Populate the cache before compiling the nested components,\n      // so that components can reference themselves in their template.\n      this._compilerCache.set(component, protoView);\n      MapWrapper.delete(this._compiling, component);\n\n      // Compile all the components from the template\n      var nestedPVPromises = this._compileNestedComponents(protoView);\n      if (nestedPVPromises.length > 0) {\n        // Returns ProtoView Promise when there are any asynchronous nested ProtoViews.\n        // The promise will resolved after nested ProtoViews are compiled.\n        return PromiseWrapper.then(PromiseWrapper.all(nestedPVPromises),\n          (_) => protoView,\n          (e) => { throw new BaseException(`${e} -> Failed to compile ${stringify(component)}`); }\n        );\n      }\n      return protoView;\n    });\n    MapWrapper.set(this._compiling, component, pvPromise);\n    return pvPromise;\n  }\n\n  _compileNoRecurse(componentBinding, template, directives):Promise<ProtoView> {\n    var component = componentBinding.key.token;\n    var componentUrl = this._urlResolver.resolve(\n        this._appUrl, this._componentUrlMapper.getUrl(component)\n    );\n    var templateAbsUrl = null;\n    if (isPresent(template.url)) {\n      templateAbsUrl = this._urlResolver.resolve(componentUrl, template.url);\n    } else {\n      // Note: If we have an inline template, we also need to send\n      // the url for the component to the renderer so that it\n      // is able to resolve urls in stylesheets.\n      templateAbsUrl = componentUrl;\n    }\n    var renderTemplate = new renderApi.Template({\n      componentId: stringify(component),\n      absUrl: templateAbsUrl,\n      inline: template.inline,\n      directives: ListWrapper.map(directives, this._buildRenderDirective)\n    });\n    return this._renderer.compile(renderTemplate).then( (renderPv) => {\n      return this._protoViewFactory.createProtoView(componentBinding.annotation, renderPv, directives);\n    });\n  }\n\n  _compileNestedComponents(protoView, nestedPVPromises = null):List<Promise> {\n    if (isBlank(nestedPVPromises)) {\n      nestedPVPromises = [];\n    }\n    ListWrapper.map(protoView.elementBinders, (elementBinder) => {\n      var nestedComponent = elementBinder.componentDirective;\n      if (isPresent(nestedComponent) && !(nestedComponent.annotation instanceof DynamicComponent)) {\n        var nestedCall = this._compile(nestedComponent);\n        if (PromiseWrapper.isPromise(nestedCall)) {\n          ListWrapper.push(nestedPVPromises, nestedCall.then( (nestedPv) => {\n            elementBinder.nestedProtoView = nestedPv;\n          }));\n        } else {\n          elementBinder.nestedProtoView = nestedCall;\n        }\n      } else if (isPresent(elementBinder.nestedProtoView)) {\n        this._compileNestedComponents(elementBinder.nestedProtoView, nestedPVPromises);\n      }\n    });\n    return nestedPVPromises;\n  }\n\n  _buildRenderDirective(directiveBinding) {\n    var ann = directiveBinding.annotation;\n    var renderType;\n    var compileChildren = true;\n    if ((ann instanceof Component) || (ann instanceof DynamicComponent)) {\n      renderType = renderApi.DirectiveMetadata.COMPONENT_TYPE;\n    } else if (ann instanceof Viewport) {\n      renderType = renderApi.DirectiveMetadata.VIEWPORT_TYPE;\n    } else if (ann instanceof Decorator) {\n      renderType = renderApi.DirectiveMetadata.DECORATOR_TYPE;\n      compileChildren = ann.compileChildren;\n    }\n    var setters = [];\n    var readAttributes = [];\n    ListWrapper.forEach(directiveBinding.dependencies, (dep) => {\n      if (isPresent(dep.propSetterName)) {\n        ListWrapper.push(setters, dep.propSetterName);\n      }\n      if (isPresent(dep.attributeName)) {\n        ListWrapper.push(readAttributes, dep.attributeName);\n      }\n    });\n    return new renderApi.DirectiveMetadata({\n      id: stringify(directiveBinding.key.token),\n      type: renderType,\n      selector: ann.selector,\n      compileChildren: compileChildren,\n      events: isPresent(ann.events) ? MapWrapper.createFromStringMap(ann.events) : null,\n      bind: isPresent(ann.bind) ? MapWrapper.createFromStringMap(ann.bind) : null,\n      setters: setters,\n      readAttributes: readAttributes\n    });\n  }\n\n  _flattenDirectives(template: Template):List<Type> {\n    if (isBlank(template.directives)) return [];\n\n    var directives = [];\n    this._flattenList(template.directives, directives);\n\n    return directives;\n  }\n\n  _flattenList(tree:List<any>, out:List<Type>) {\n    for (var i = 0; i < tree.length; i++) {\n      var item = tree[i];\n      if (ListWrapper.isList(item)) {\n        this._flattenList(item, out);\n      } else {\n        ListWrapper.push(out, item);\n      }\n    }\n  }\n\n}\n\n// TODO(tbosch): delete this class once we use the render views\n/**\n * The compiler loads and translates the html templates of components into\n * nested ProtoViews. To decompose its functionality it uses\n * the render compiler.\n *\n * @publicModule angular2/template\n */\n@Injectable()\nexport class Compiler extends NewCompiler {\n  constructor(changeDetection:ChangeDetection,\n              templateLoader:TemplateLoader,\n              reader: DirectiveMetadataReader,\n              parser:Parser,\n              cache:CompilerCache,\n              shadowDomStrategy: ShadowDomStrategy,\n              templateResolver: TemplateResolver,\n              componentUrlMapper: ComponentUrlMapper,\n              urlResolver: UrlResolver) {\n    super(\n      reader,\n      cache,\n      templateResolver,\n      componentUrlMapper,\n      urlResolver,\n      new DirectDomRenderer(\n        new rc.Compiler(\n          new DefaultStepFactory(parser, shadowDomStrategy.render),\n          templateLoader\n        ),\n        null, null\n      ),\n      new ProtoViewFactory(changeDetection, shadowDomStrategy)\n    );\n  }\n}\n"]}