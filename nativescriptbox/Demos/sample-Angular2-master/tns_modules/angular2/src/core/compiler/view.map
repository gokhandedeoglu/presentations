{"version":3,"sources":["view.js"],"names":[],"mappings":"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","file":"/home/korchev/github/angular/modules/angular2/src/core/compiler/view.js","sourcesContent":["import {DOM} from 'angular2/src/dom/dom_adapter';\nimport {Promise} from 'angular2/src/facade/async';\nimport {ListWrapper, MapWrapper, Map, StringMapWrapper, List} from 'angular2/src/facade/collection';\nimport {AST, Locals, ChangeDispatcher, ProtoChangeDetector, ChangeDetector,\n  ChangeRecord, BindingRecord, BindingPropagationConfig, uninitialized} from 'angular2/change_detection';\n\nimport {ProtoElementInjector, ElementInjector, PreBuiltObjects, DirectiveBinding} from './element_injector';\nimport {ElementBinder} from './element_binder';\nimport {SetterFn} from 'angular2/src/reflection/types';\nimport {IMPLEMENTS, int, isPresent, isBlank, BaseException} from 'angular2/src/facade/lang';\nimport {Injector} from 'angular2/di';\nimport {NgElement} from 'angular2/src/core/dom/element';\nimport {ViewContainer} from './view_container';\nimport {LightDom} from './shadow_dom_emulation/light_dom';\nimport {Content} from './shadow_dom_emulation/content_tag';\nimport {ShadowDomStrategy} from './shadow_dom_strategy';\nimport {ViewPool} from './view_pool';\nimport {EventManager} from 'angular2/src/render/dom/events/event_manager';\n\nconst NG_BINDING_CLASS = 'ng-binding';\nconst NG_BINDING_CLASS_SELECTOR = '.ng-binding';\n\n// TODO(rado): make this configurable/smarter.\nvar VIEW_POOL_CAPACITY = 10000;\nvar VIEW_POOL_PREFILL = 0;\n\n/**\n * Const of making objects: http://jsperf.com/instantiate-size-of-object\n *\n * @publicModule angular2/template\n */\n@IMPLEMENTS(ChangeDispatcher)\nexport class View {\n  /// This list matches the _nodes list. It is sparse, since only Elements have ElementInjector\n  rootElementInjectors:List<ElementInjector>;\n  elementInjectors:List<ElementInjector>;\n  bindElements:List;\n  textNodes:List;\n  changeDetector:ChangeDetector;\n  /// When the view is part of render tree, the DocumentFragment is empty, which is why we need\n  /// to keep track of the nodes.\n  nodes:List;\n  componentChildViews: List<View>;\n  viewContainers: List<ViewContainer>;\n  contentTags: List<Content>;\n  preBuiltObjects: List<PreBuiltObjects>;\n  lightDoms: List<LightDom>;\n  proto: ProtoView;\n  context: any;\n  locals:Locals;\n\n  constructor(proto:ProtoView, nodes:List, protoLocals:Map) {\n    this.proto = proto;\n    this.nodes = nodes;\n    this.changeDetector = null;\n    this.elementInjectors = null;\n    this.rootElementInjectors = null;\n    this.textNodes = null;\n    this.bindElements = null;\n    this.componentChildViews = null;\n    this.viewContainers = null;\n    this.contentTags = null;\n    this.preBuiltObjects = null;\n    this.lightDoms = null;\n    this.context = null;\n    this.locals = new Locals(null, MapWrapper.clone(protoLocals)); //TODO optimize this\n  }\n\n  init(changeDetector:ChangeDetector, elementInjectors:List, rootElementInjectors:List, textNodes: List, bindElements:List,\n    viewContainers:List, contentTags:List, preBuiltObjects:List, componentChildViews:List, lightDoms:List<LightDom>) {\n    this.changeDetector = changeDetector;\n    this.elementInjectors = elementInjectors;\n    this.rootElementInjectors = rootElementInjectors;\n    this.textNodes = textNodes;\n    this.bindElements = bindElements;\n    this.viewContainers = viewContainers;\n    this.contentTags = contentTags;\n    this.preBuiltObjects = preBuiltObjects;\n    this.componentChildViews = componentChildViews;\n    this.lightDoms = lightDoms;\n  }\n\n  setLocal(contextName: string, value) {\n    if (!this.hydrated()) throw new BaseException('Cannot set locals on dehydrated view.');\n    if (!MapWrapper.contains(this.proto.variableBindings, contextName)) {\n      return;\n    }\n    var templateName = MapWrapper.get(this.proto.variableBindings, contextName);\n    this.locals.set(templateName, value);\n  }\n\n  hydrated() {\n    return isPresent(this.context);\n  }\n\n  _hydrateContext(newContext, locals) {\n    this.context = newContext;\n    this.locals.parent = locals;\n    this.changeDetector.hydrate(this.context, this.locals);\n  }\n\n  _dehydrateContext() {\n    if (isPresent(this.locals)) {\n      this.locals.clearValues();\n    }\n    this.context = null;\n    this.changeDetector.dehydrate();\n  }\n\n  /**\n   * A dehydrated view is a state of the view that allows it to be moved around\n   * the view tree, without incurring the cost of recreating the underlying\n   * injectors and watch records.\n   *\n   * A dehydrated view has the following properties:\n   *\n   * - all element injectors are empty.\n   * - all appInjectors are released.\n   * - all viewcontainers are empty.\n   * - all context locals are set to null.\n   * - the view context is null.\n   *\n   * A call to hydrate/dehydrate does not attach/detach the view from the view\n   * tree.\n   */\n  hydrate(appInjector: Injector, hostElementInjector: ElementInjector, hostLightDom: LightDom,\n      context: Object, locals:Locals) {\n    if (this.hydrated()) throw new BaseException('The view is already hydrated.');\n    this._hydrateContext(context, locals);\n\n    // viewContainers\n    for (var i = 0; i < this.viewContainers.length; i++) {\n      var vc = this.viewContainers[i];\n      if (isPresent(vc)) {\n        vc.hydrate(appInjector, hostElementInjector, hostLightDom);\n      }\n    }\n\n    var binders = this.proto.elementBinders;\n    var componentChildViewIndex = 0;\n    for (var i = 0; i < binders.length; ++i) {\n      var componentDirective = binders[i].componentDirective;\n      var shadowDomAppInjector = null;\n\n      // shadowDomAppInjector\n      if (isPresent(componentDirective)) {\n        var services = componentDirective.annotation.services;\n        if (isPresent(services))\n          shadowDomAppInjector = appInjector.createChild(services);\n        else {\n          shadowDomAppInjector = appInjector;\n        }\n      } else {\n        shadowDomAppInjector = null;\n      }\n\n      // elementInjectors\n      var elementInjector = this.elementInjectors[i];\n      if (isPresent(elementInjector)) {\n        elementInjector.instantiateDirectives(appInjector, shadowDomAppInjector, this.preBuiltObjects[i]);\n\n        // The exporting of $implicit is a special case. Since multiple elements will all export\n        // the different values as $implicit, directly assign $implicit bindings to the variable\n        // name.\n        var exportImplicitName = elementInjector.getExportImplicitName();\n        if (elementInjector.isExportingComponent()) {\n          this.locals.set(exportImplicitName, elementInjector.getComponent());\n        } else if (elementInjector.isExportingElement()) {\n          this.locals.set(exportImplicitName, elementInjector.getNgElement().domElement);\n        }\n      }\n\n      if (isPresent(binders[i].nestedProtoView) && isPresent(componentDirective)) {\n        this.componentChildViews[componentChildViewIndex++].hydrate(shadowDomAppInjector,\n          elementInjector, this.lightDoms[i], elementInjector.getComponent(), null);\n      }\n    }\n\n    for (var i = 0; i < this.lightDoms.length; ++i) {\n      var lightDom = this.lightDoms[i];\n      if (isPresent(lightDom)) {\n        lightDom.redistribute();\n      }\n    }\n  }\n\n  dehydrate() {\n    // Note: preserve the opposite order of the hydration process.\n\n    // componentChildViews\n    for (var i = 0; i < this.componentChildViews.length; i++) {\n      this.componentChildViews[i].dehydrate();\n    }\n\n    // elementInjectors\n    for (var i = 0; i < this.elementInjectors.length; i++) {\n      if (isPresent(this.elementInjectors[i])) {\n        this.elementInjectors[i].clearDirectives();\n      }\n    }\n\n    // viewContainers\n    if (isPresent(this.viewContainers)) {\n      for (var i = 0; i < this.viewContainers.length; i++) {\n        var vc = this.viewContainers[i];\n        if (isPresent(vc)) {\n          vc.dehydrate();\n        }\n      }\n    }\n\n    this._dehydrateContext();\n  }\n\n  /**\n   * Triggers the event handlers for the element and the directives.\n   *\n   * This method is intended to be called from directive EventEmitters.\n   *\n   * @param {string} eventName\n   * @param {*} eventObj\n   * @param {int} binderIndex\n   */\n  triggerEventHandlers(eventName: string, eventObj, binderIndex: int) {\n    var handlers = this.proto.eventHandlers[binderIndex];\n    if (isBlank(handlers)) return;\n    var handler = StringMapWrapper.get(handlers, eventName);\n    if (isBlank(handler)) return;\n    handler(eventObj, this);\n  }\n\n  onAllChangesDone(directiveMemento:DirectiveMemento) {\n    var dir = directiveMemento.directive(this.elementInjectors);\n    dir.onAllChangesDone();\n  }\n\n  onChange(directiveMemento:DirectiveMemento, changes) {\n    var dir = directiveMemento.directive(this.elementInjectors);\n    dir.onChange(changes);\n  }\n\n  // dispatch to element injector or text nodes based on context\n  invokeMementoFor(memento:any, currentValue:any) {\n    if (memento instanceof DirectiveBindingMemento) {\n      var directiveMemento:DirectiveBindingMemento = memento;\n      directiveMemento.invoke(currentValue, this.elementInjectors);\n\n    } else if (memento instanceof ElementBindingMemento) {\n      var elementMemento:ElementBindingMemento = memento;\n      elementMemento.invoke(currentValue, this.bindElements);\n\n    } else {\n      // we know it refers to _textNodes.\n      var textNodeIndex:number = memento;\n      DOM.setText(this.textNodes[textNodeIndex], currentValue);\n    }\n  }\n}\n\n/**\n *\n * @publicModule angular2/template\n */\nexport class ProtoView {\n  element;\n  elementBinders:List<ElementBinder>;\n  protoChangeDetector:ProtoChangeDetector;\n  variableBindings: Map;\n  protoLocals:Map;\n  textNodesWithBindingCount:int;\n  elementsWithBindingCount:int;\n  instantiateInPlace:boolean;\n  rootBindingOffset:int;\n  isTemplateElement:boolean;\n  shadowDomStrategy: ShadowDomStrategy;\n  _viewPool: ViewPool;\n  stylePromises: List<Promise>;\n  // List<Map<eventName, handler>>, indexed by binder index\n  eventHandlers:List;\n  bindingRecords:List;\n  parentProtoView:ProtoView;\n  _variableBindings:List;\n\n  _directiveMementosMap:Map;\n  _directiveMementos:List;\n\n  constructor(\n      template,\n      protoChangeDetector:ProtoChangeDetector,\n      shadowDomStrategy:ShadowDomStrategy, parentProtoView:ProtoView = null) {\n    this.element = template;\n    this.elementBinders = [];\n    this.variableBindings = MapWrapper.create();\n    this.protoLocals = MapWrapper.create();\n    this.protoChangeDetector = protoChangeDetector;\n    this.parentProtoView = parentProtoView;\n    this.textNodesWithBindingCount = 0;\n    this.elementsWithBindingCount = 0;\n    this.instantiateInPlace = false;\n    this.rootBindingOffset = (isPresent(this.element) && DOM.hasClass(this.element, NG_BINDING_CLASS))\n      ? 1 : 0;\n    this.isTemplateElement = DOM.isTemplateElement(this.element);\n    this.shadowDomStrategy = shadowDomStrategy;\n    this._viewPool = new ViewPool(VIEW_POOL_CAPACITY);\n    this.stylePromises = [];\n    this.eventHandlers = [];\n    this.bindingRecords = [];\n    this._directiveMementosMap = MapWrapper.create();\n    this._variableBindings = null;\n    this._directiveMementos = null;\n  }\n\n  // TODO(rado): hostElementInjector should be moved to hydrate phase.\n  instantiate(hostElementInjector: ElementInjector, eventManager: EventManager):View {\n    if (this._viewPool.length() == 0) this._preFillPool(hostElementInjector, eventManager);\n    var view = this._viewPool.pop();\n    return isPresent(view) ? view : this._instantiate(hostElementInjector, eventManager);\n  }\n\n  _preFillPool(hostElementInjector: ElementInjector, eventManager: EventManager) {\n    for (var i = 0; i < VIEW_POOL_PREFILL; i++) {\n      this._viewPool.push(this._instantiate(hostElementInjector, eventManager));\n    }\n  }\n\n  //TODO: Tobias or Victor. Moving it into the constructor.\n  // this work should be done the constructor of ProtoView once we separate\n  // ProtoView and ProtoViewBuilder\n  _getVariableBindings() {\n    if (isPresent(this._variableBindings)) {\n      return this._variableBindings;\n    }\n\n    this._variableBindings = isPresent(this.parentProtoView) ?\n      ListWrapper.clone(this.parentProtoView._getVariableBindings()) : [];\n\n    MapWrapper.forEach(this.protoLocals, (v, local) => {\n      ListWrapper.push(this._variableBindings, local);\n    });\n\n    return this._variableBindings;\n  }\n\n  //TODO: Tobias or Victor. Moving it into the constructor.\n  // this work should be done the constructor of ProtoView once we separate\n  // ProtoView and ProtoViewBuilder\n  _getDirectiveMementos() {\n    if (isPresent(this._directiveMementos)) {\n      return this._directiveMementos;\n    }\n\n    this._directiveMementos = [];\n\n    for (var injectorIndex = 0; injectorIndex < this.elementBinders.length; ++injectorIndex) {\n      var pei = this.elementBinders[injectorIndex].protoElementInjector;\n      if (isPresent(pei)) {\n        for (var directiveIndex = 0; directiveIndex < pei.numberOfDirectives; ++directiveIndex) {\n          ListWrapper.push(this._directiveMementos, this._getDirectiveMemento(injectorIndex, directiveIndex));\n        }\n      }\n    }\n\n    return this._directiveMementos;\n  }\n\n  _instantiate(hostElementInjector: ElementInjector, eventManager: EventManager): View {\n    var rootElementClone = this.instantiateInPlace ? this.element : DOM.importIntoDoc(this.element);\n    var elementsWithBindingsDynamic;\n    if (this.isTemplateElement) {\n      elementsWithBindingsDynamic = DOM.querySelectorAll(DOM.content(rootElementClone), NG_BINDING_CLASS_SELECTOR);\n    } else {\n      elementsWithBindingsDynamic= DOM.getElementsByClassName(rootElementClone, NG_BINDING_CLASS);\n    }\n\n    var elementsWithBindings = ListWrapper.createFixedSize(elementsWithBindingsDynamic.length);\n    for (var binderIdx = 0; binderIdx < elementsWithBindingsDynamic.length; ++binderIdx) {\n      elementsWithBindings[binderIdx] = elementsWithBindingsDynamic[binderIdx];\n    }\n\n    var viewNodes;\n    if (this.isTemplateElement) {\n      var childNode = DOM.firstChild(DOM.content(rootElementClone));\n      viewNodes = []; // TODO(perf): Should be fixed size, since we could pre-compute in in ProtoView\n      // Note: An explicit loop is the fastest way to convert a DOM array into a JS array!\n      while(childNode != null) {\n        ListWrapper.push(viewNodes, childNode);\n        childNode = DOM.nextSibling(childNode);\n      }\n    } else {\n      viewNodes = [rootElementClone];\n    }\n\n    var view = new View(this, viewNodes, this.protoLocals);\n    var changeDetector = this.protoChangeDetector.instantiate(view, this.bindingRecords,\n      this._getVariableBindings(), this._getDirectiveMementos());\n\n    var binders = this.elementBinders;\n    var elementInjectors = ListWrapper.createFixedSize(binders.length);\n    var eventHandlers = ListWrapper.createFixedSize(binders.length);\n    var rootElementInjectors = [];\n    var textNodes = [];\n    var elementsWithPropertyBindings = [];\n    var preBuiltObjects = ListWrapper.createFixedSize(binders.length);\n    var viewContainers = ListWrapper.createFixedSize(binders.length);\n    var contentTags = ListWrapper.createFixedSize(binders.length);\n    var componentChildViews = [];\n    var lightDoms = ListWrapper.createFixedSize(binders.length);\n\n    for (var binderIdx = 0; binderIdx < binders.length; binderIdx++) {\n      var binder = binders[binderIdx];\n      var element;\n      if (binderIdx === 0 && this.rootBindingOffset === 1) {\n        element = rootElementClone;\n      } else {\n        element = elementsWithBindings[binderIdx - this.rootBindingOffset];\n      }\n      var elementInjector = null;\n\n      // elementInjectors and rootElementInjectors\n      var protoElementInjector = binder.protoElementInjector;\n      if (isPresent(protoElementInjector)) {\n        if (isPresent(protoElementInjector.parent)) {\n          var parentElementInjector = elementInjectors[protoElementInjector.parent.index];\n          elementInjector = protoElementInjector.instantiate(parentElementInjector, null);\n        } else {\n          elementInjector = protoElementInjector.instantiate(null, hostElementInjector);\n          ListWrapper.push(rootElementInjectors, elementInjector);\n        }\n      }\n      elementInjectors[binderIdx] = elementInjector;\n\n      if (binder.hasElementPropertyBindings) {\n        ListWrapper.push(elementsWithPropertyBindings, element);\n      }\n\n      // textNodes\n      var textNodeIndices = binder.textNodeIndices;\n      if (isPresent(textNodeIndices)) {\n        var childNode = DOM.firstChild(DOM.templateAwareRoot(element));\n        for (var j = 0, k = 0; j < textNodeIndices.length; j++) {\n          for(var index = textNodeIndices[j]; k < index; k++) {\n            childNode = DOM.nextSibling(childNode);\n          }\n          ListWrapper.push(textNodes, childNode);\n        }\n      }\n\n      // componentChildViews\n      var lightDom = null;\n      var bindingPropagationConfig = null;\n      if (isPresent(binder.nestedProtoView) && isPresent(binder.componentDirective)) {\n        var strategy = this.shadowDomStrategy;\n        var childView = binder.nestedProtoView.instantiate(elementInjector, eventManager);\n        changeDetector.addChild(childView.changeDetector);\n\n        lightDom = strategy.constructLightDom(view, childView, element);\n        strategy.attachTemplate(element, childView);\n\n        bindingPropagationConfig = new BindingPropagationConfig(childView.changeDetector);\n\n        ListWrapper.push(componentChildViews, childView);\n      }\n      lightDoms[binderIdx] = lightDom;\n\n      var destLightDom = null;\n      if (isPresent(binder.parent) && binder.distanceToParent === 1) {\n        destLightDom = lightDoms[binder.parent.index];\n      }\n\n      // viewContainers\n      var viewContainer = null;\n      if (isPresent(binder.viewportDirective)) {\n        viewContainer = new ViewContainer(view, element, binder.nestedProtoView, elementInjector,\n          eventManager, destLightDom);\n      }\n      viewContainers[binderIdx] = viewContainer;\n\n      // contentTags\n      var contentTag = null;\n      if (isPresent(binder.contentTagSelector)) {\n        contentTag = new Content(destLightDom, element, binder.contentTagSelector);\n      }\n      contentTags[binderIdx] = contentTag;\n\n      // preBuiltObjects\n      if (isPresent(elementInjector)) {\n        preBuiltObjects[binderIdx] = new PreBuiltObjects(view, new NgElement(element), viewContainer,\n          bindingPropagationConfig);\n      }\n\n      // events\n      if (isPresent(binder.events)) {\n        eventHandlers[binderIdx] = StringMapWrapper.create();\n        StringMapWrapper.forEach(binder.events, (eventMap, eventName) => {\n          var handler = ProtoView.buildEventHandler(eventMap, binderIdx);\n          StringMapWrapper.set(eventHandlers[binderIdx], eventName, handler);\n          if (isBlank(elementInjector) || !elementInjector.hasEventEmitter(eventName)) {\n            eventManager.addEventListener(element, eventName,\n              (event) => { handler(event, view); });\n          }\n        });\n      }\n    }\n\n    this.eventHandlers = eventHandlers;\n\n    view.init(changeDetector, elementInjectors, rootElementInjectors, textNodes, elementsWithPropertyBindings,\n      viewContainers, contentTags, preBuiltObjects, componentChildViews, lightDoms);\n\n    return view;\n  }\n\n  returnToPool(view: View) {\n    this._viewPool.push(view);\n  }\n\n  /**\n   * Creates an event handler.\n   *\n   * @param {Map} eventMap Map directiveIndexes to expressions\n   * @param {int} injectorIdx\n   * @returns {Function}\n   */\n  static buildEventHandler(eventMap: Map, injectorIdx: int) {\n    var locals = MapWrapper.create();\n    return (event, view) => {\n      // Most of the time the event will be fired only when the view is in the live document.\n      // However, in a rare circumstance the view might get dehydrated, in between the event\n      // queuing up and firing.\n      if (view.hydrated()) {\n        MapWrapper.set(locals, '$event', event);\n        MapWrapper.forEach(eventMap, (expr, directiveIndex) => {\n          var context;\n          if (directiveIndex === -1) {\n            context = view.context;\n          } else {\n            context = view.elementInjectors[injectorIdx].getDirectiveAtIndex(directiveIndex);\n          }\n          expr.eval(context, new Locals(view.locals, locals));\n        });\n      }\n    }\n  }\n\n  bindVariable(contextName:string, templateName:string) {\n    MapWrapper.set(this.variableBindings, contextName, templateName);\n    MapWrapper.set(this.protoLocals, templateName, null);\n  }\n\n  bindElement(parent:ElementBinder, distanceToParent:int, protoElementInjector:ProtoElementInjector,\n      componentDirective:DirectiveBinding = null, viewportDirective:DirectiveBinding = null):ElementBinder {\n    var elBinder = new ElementBinder(this.elementBinders.length, parent, distanceToParent,\n        protoElementInjector, componentDirective, viewportDirective);\n    ListWrapper.push(this.elementBinders, elBinder);\n    return elBinder;\n  }\n\n  /**\n   * Adds a text node binding for the last created ElementBinder via bindElement\n   */\n  bindTextNode(indexInParent:int, expression:AST) {\n    var elBinder = this.elementBinders[this.elementBinders.length-1];\n    if (isBlank(elBinder.textNodeIndices)) {\n      elBinder.textNodeIndices = ListWrapper.create();\n    }\n    ListWrapper.push(elBinder.textNodeIndices, indexInParent);\n    var memento = this.textNodesWithBindingCount++;\n    ListWrapper.push(this.bindingRecords, new BindingRecord(expression, memento, null));\n  }\n\n  /**\n   * Adds an element property binding for the last created ElementBinder via bindElement\n   */\n  bindElementProperty(expression:AST, setterName:string, setter:SetterFn) {\n    var elBinder = this.elementBinders[this.elementBinders.length-1];\n    if (!elBinder.hasElementPropertyBindings) {\n      elBinder.hasElementPropertyBindings = true;\n      this.elementsWithBindingCount++;\n    }\n    var memento = new ElementBindingMemento(this.elementsWithBindingCount-1, setter);\n    ListWrapper.push(this.bindingRecords, new BindingRecord(expression, memento, null));\n  }\n\n  /**\n   * Adds an event binding for the last created ElementBinder via bindElement.\n   *\n   * If the directive index is a positive integer, the event is evaluated in the context of\n   * the given directive.\n   *\n   * If the directive index is -1, the event is evaluated in the context of the enclosing view.\n   *\n   * @param {string} eventName\n   * @param {AST} expression\n   * @param {int} directiveIndex The directive index in the binder or -1 when the event is not bound\n   *                             to a directive\n   */\n  bindEvent(eventName:string, expression:AST, directiveIndex: int = -1) {\n    var elBinder = this.elementBinders[this.elementBinders.length - 1];\n    var events = elBinder.events;\n    if (isBlank(events)) {\n      events = StringMapWrapper.create();\n      elBinder.events = events;\n    }\n    var event = StringMapWrapper.get(events, eventName);\n    if (isBlank(event)) {\n      event = MapWrapper.create();\n      StringMapWrapper.set(events, eventName, event);\n    }\n    MapWrapper.set(event, directiveIndex, expression);\n  }\n\n  /**\n   * Adds a directive property binding for the last created ElementBinder via bindElement\n   */\n  bindDirectiveProperty(\n    directiveIndex:number,\n    expression:AST,\n    setterName:string,\n    setter:SetterFn) {\n\n    var elementIndex = this.elementBinders.length-1;\n    var bindingMemento = new DirectiveBindingMemento(\n      elementIndex,\n      directiveIndex,\n      setterName,\n      setter\n    );\n    var directiveMemento = this._getDirectiveMemento(elementIndex, directiveIndex);\n    ListWrapper.push(this.bindingRecords, new BindingRecord(expression, bindingMemento, directiveMemento));\n  }\n\n  _getDirectiveMemento(elementInjectorIndex:number, directiveIndex:number) {\n    var id = elementInjectorIndex * 100 + directiveIndex;\n    var protoElementInjector = this.elementBinders[elementInjectorIndex].protoElementInjector;\n\n    if (!MapWrapper.contains(this._directiveMementosMap, id)) {\n      var binding = protoElementInjector.getDirectiveBindingAtIndex(directiveIndex);\n      MapWrapper.set(this._directiveMementosMap, id,\n        new DirectiveMemento(elementInjectorIndex, directiveIndex,\n          binding.callOnAllChangesDone, binding.callOnChange));\n    }\n\n    return MapWrapper.get(this._directiveMementosMap, id);\n  }\n\n  // Create a rootView as if the compiler encountered <rootcmp></rootcmp>,\n  // and the component template is already compiled into protoView.\n  // Used for bootstrapping.\n  static createRootProtoView(protoView: ProtoView,\n      insertionElement,\n      rootComponentBinding: DirectiveBinding,\n      protoChangeDetector:ProtoChangeDetector,\n      shadowDomStrategy: ShadowDomStrategy\n  ): ProtoView {\n\n    DOM.addClass(insertionElement, NG_BINDING_CLASS);\n    var cmpType = rootComponentBinding.key.token;\n    var rootProtoView = new ProtoView(insertionElement, protoChangeDetector, shadowDomStrategy);\n    rootProtoView.instantiateInPlace = true;\n    var binder = rootProtoView.bindElement(null, 0,\n        new ProtoElementInjector(null, 0, [cmpType], true));\n    binder.componentDirective = rootComponentBinding;\n    binder.nestedProtoView = protoView;\n    shadowDomStrategy.shimAppElement(cmpType, insertionElement);\n    return rootProtoView;\n  }\n}\n\n/**\n */\nexport class ElementBindingMemento {\n  _elementIndex:int;\n  _setter:SetterFn;\n  constructor(elementIndex:int, setter:SetterFn) {\n    this._elementIndex = elementIndex;\n    this._setter = setter;\n  }\n\n  invoke(currentValue:any, bindElements:List) {\n    var element = bindElements[this._elementIndex];\n    this._setter(element, currentValue);\n  }\n}\n\n/**\n */\nexport class DirectiveBindingMemento {\n  _elementInjectorIndex:int;\n  _directiveIndex:int;\n  propertyName:string;\n  _setter:SetterFn;\n  constructor(\n      elementInjectorIndex:number,\n      directiveIndex:number,\n      propertyName:string,\n      setter:SetterFn) {\n    this._elementInjectorIndex = elementInjectorIndex;\n    this._directiveIndex = directiveIndex;\n    this.propertyName = propertyName;\n    this._setter = setter;\n  }\n\n  invoke(currentValue:any, elementInjectors:List<ElementInjector>) {\n    var elementInjector:ElementInjector = elementInjectors[this._elementInjectorIndex];\n    var directive = elementInjector.getDirectiveAtIndex(this._directiveIndex);\n    this._setter(directive, currentValue);\n  }\n}\n\nclass DirectiveMemento {\n  _elementInjectorIndex:number;\n  _directiveIndex:number;\n  callOnAllChangesDone:boolean;\n  callOnChange:boolean;\n\n  constructor(elementInjectorIndex:number, directiveIndex:number, callOnAllChangesDone:boolean,\n              callOnChange:boolean) {\n    this._elementInjectorIndex = elementInjectorIndex;\n    this._directiveIndex = directiveIndex;\n    this.callOnAllChangesDone = callOnAllChangesDone;\n    this.callOnChange = callOnChange;\n  }\n\n  directive(elementInjectors:List<ElementInjector>) {\n    var elementInjector:ElementInjector = elementInjectors[this._elementInjectorIndex];\n    return elementInjector.getDirectiveAtIndex(this._directiveIndex);\n  }\n}"]}