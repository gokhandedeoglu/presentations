{"version":3,"sources":["shadow_dom_strategy.js"],"names":[],"mappings":"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","file":"/home/korchev/github/angular/modules/angular2/src/core/compiler/shadow_dom_strategy.js","sourcesContent":["import {Injectable} from 'angular2/di';\n\nimport {stringify} from 'angular2/src/facade/lang';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport * as viewModule from './view';\nimport {LightDom} from './shadow_dom_emulation/light_dom';\nimport {StyleInliner} from 'angular2/src/render/dom/shadow_dom/style_inliner';\nimport {StyleUrlResolver} from 'angular2/src/render/dom/shadow_dom/style_url_resolver';\n\n// temporal import while we migrated the views over\nimport * as sds from 'angular2/src/render/dom/shadow_dom/shadow_dom_strategy';\nimport * as nsds from 'angular2/src/render/dom/shadow_dom/native_shadow_dom_strategy';\nimport * as eusds from 'angular2/src/render/dom/shadow_dom/emulated_unscoped_shadow_dom_strategy';\nimport * as essds from 'angular2/src/render/dom/shadow_dom/emulated_scoped_shadow_dom_strategy';\n\n/**\n * @publicModule angular2/template\n */\nexport class ShadowDomStrategy {\n  render: sds.ShadowDomStrategy;\n\n  attachTemplate(el, view:viewModule.View) {}\n  constructLightDom(lightDomView:viewModule.View, shadowDomView:viewModule.View, el): LightDom { return null; }\n\n  shimAppElement(componentType, insertionElement) {\n    this.render.processElement(null, stringify(componentType), insertionElement);\n  }\n}\n\n/**\n * This strategy emulates the Shadow DOM for the templates, styles **excluded**:\n * - components templates are added as children of their component element,\n * - styles are moved from the templates to the styleHost (i.e. the document head).\n *\n * Notes:\n * - styles are **not** scoped to their component and will apply to the whole document,\n * - you can **not** use shadow DOM specific selectors in the styles\n *\n * @publicModule angular2/template\n */\n@Injectable()\nexport class EmulatedUnscopedShadowDomStrategy extends ShadowDomStrategy {\n\n  constructor(styleUrlResolver: StyleUrlResolver, styleHost) {\n    super();\n    this.render = new eusds.EmulatedUnscopedShadowDomStrategy(styleUrlResolver, styleHost);\n  }\n\n  attachTemplate(el, view:viewModule.View) {\n    DOM.clearNodes(el);\n    _moveViewNodesIntoParent(el, view);\n  }\n\n  constructLightDom(lightDomView:viewModule.View, shadowDomView:viewModule.View, el): LightDom {\n    return new LightDom(lightDomView, shadowDomView, el);\n  }\n}\n\n/**\n * This strategy emulates the Shadow DOM for the templates, styles **included**:\n * - components templates are added as children of their component element,\n * - both the template and the styles are modified so that styles are scoped to the component\n *   they belong to,\n * - styles are moved from the templates to the styleHost (i.e. the document head).\n *\n * Notes:\n * - styles are scoped to their component and will apply only to it,\n * - a common subset of shadow DOM selectors are supported,\n * - see `ShadowCss` for more information and limitations.\n *\n * @publicModule angular2/template\n */\n@Injectable()\nexport class EmulatedScopedShadowDomStrategy extends ShadowDomStrategy {\n\n  constructor(styleInliner: StyleInliner, styleUrlResolver: StyleUrlResolver, styleHost) {\n    super();\n    this.render = new essds.EmulatedScopedShadowDomStrategy(styleInliner, styleUrlResolver, styleHost);\n  }\n\n  attachTemplate(el, view:viewModule.View) {\n    DOM.clearNodes(el);\n    _moveViewNodesIntoParent(el, view);\n  }\n\n  constructLightDom(lightDomView:viewModule.View, shadowDomView:viewModule.View, el): LightDom {\n    return new LightDom(lightDomView, shadowDomView, el);\n  }\n}\n\n/**\n * This strategies uses the native Shadow DOM support.\n *\n * The templates for the component are inserted in a Shadow Root created on the component element.\n * Hence they are strictly isolated.\n */\n@Injectable()\nexport class NativeShadowDomStrategy extends ShadowDomStrategy {\n\n  constructor(styleUrlResolver: StyleUrlResolver) {\n    super();\n    this.render = new nsds.NativeShadowDomStrategy(styleUrlResolver);\n  }\n\n  attachTemplate(el, view:viewModule.View){\n    _moveViewNodesIntoParent(DOM.createShadowRoot(el), view);\n  }\n}\n\nfunction _moveViewNodesIntoParent(parent, view) {\n  for (var i = 0; i < view.nodes.length; ++i) {\n    DOM.appendChild(parent, view.nodes[i]);\n  }\n}\n"]}