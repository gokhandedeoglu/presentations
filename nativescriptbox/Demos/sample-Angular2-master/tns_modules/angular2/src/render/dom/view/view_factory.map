{"version":3,"sources":["view_factory.js"],"names":[],"mappings":"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","file":"/home/korchev/github/angular/modules/angular2/src/render/dom/view/view_factory.js","sourcesContent":["import {OpaqueToken} from 'angular2/di';\nimport {int, isPresent, isBlank, BaseException} from 'angular2/src/facade/lang';\nimport {ListWrapper, MapWrapper, Map, StringMapWrapper, List} from 'angular2/src/facade/collection';\n\nimport {DOM} from 'angular2/src/dom/dom_adapter';\n\nimport {Content} from '../shadow_dom/content_tag';\nimport {ShadowDomStrategy} from '../shadow_dom/shadow_dom_strategy';\nimport {EventManager} from 'angular2/src/render/dom/events/event_manager';\n\nimport {ViewContainer} from './view_container';\nimport {ProtoView} from './proto_view';\nimport {View} from './view';\nimport {NG_BINDING_CLASS_SELECTOR, NG_BINDING_CLASS} from '../util';\n\nexport var VIEW_POOL_CAPACITY = new OpaqueToken('ViewFactory.viewPoolCapacity');\n\n\nexport class ViewFactory {\n  _poolCapacity:number;\n  _pooledViews:List<View>;\n  _eventManager:EventManager;\n  _shadowDomStrategy:ShadowDomStrategy;\n\n  constructor(capacity, eventManager, shadowDomStrategy) {\n    this._poolCapacity = capacity;\n    this._pooledViews = ListWrapper.create();\n    this._eventManager = eventManager;\n    this._shadowDomStrategy = shadowDomStrategy;\n  }\n\n  getView(protoView:ProtoView):View {\n    // TODO(tbosch): benchmark this scanning of views and maybe\n    // replace it with a fancy LRU Map/List combination...\n    var view;\n    for (var i=0; i<this._pooledViews.length; i++) {\n      var pooledView = this._pooledViews[i];\n      if (pooledView.proto === protoView) {\n        view = ListWrapper.removeAt(this._pooledViews, i);\n      }\n    }\n    if (isBlank(view)) {\n      view = this._createView(protoView);\n    }\n    return view;\n  }\n\n  returnView(view:View) {\n    if (view.hydrated()) {\n      view.dehydrate();\n    }\n    ListWrapper.push(this._pooledViews, view);\n    while (this._pooledViews.length > this._poolCapacity) {\n      ListWrapper.removeAt(this._pooledViews, 0);\n    }\n  }\n\n  _createView(protoView:ProtoView): View {\n    var rootElementClone = protoView.isRootView ? protoView.element : DOM.importIntoDoc(protoView.element);\n    var elementsWithBindingsDynamic;\n    if (protoView.isTemplateElement) {\n      elementsWithBindingsDynamic = DOM.querySelectorAll(DOM.content(rootElementClone), NG_BINDING_CLASS_SELECTOR);\n    } else {\n      elementsWithBindingsDynamic = DOM.getElementsByClassName(rootElementClone, NG_BINDING_CLASS);\n    }\n\n    var elementsWithBindings = ListWrapper.createFixedSize(elementsWithBindingsDynamic.length);\n    for (var binderIdx = 0; binderIdx < elementsWithBindingsDynamic.length; ++binderIdx) {\n      elementsWithBindings[binderIdx] = elementsWithBindingsDynamic[binderIdx];\n    }\n\n    var viewRootNodes;\n    if (protoView.isTemplateElement) {\n      var childNode = DOM.firstChild(DOM.content(rootElementClone));\n      viewRootNodes = []; // TODO(perf): Should be fixed size, since we could pre-compute in in ProtoView\n      // Note: An explicit loop is the fastest way to convert a DOM array into a JS array!\n      while(childNode != null) {\n        ListWrapper.push(viewRootNodes, childNode);\n        childNode = DOM.nextSibling(childNode);\n      }\n    } else {\n      viewRootNodes = [rootElementClone];\n    }\n\n    var binders = protoView.elementBinders;\n    var boundTextNodes = [];\n    var boundElements = ListWrapper.createFixedSize(binders.length);\n    var viewContainers = ListWrapper.createFixedSize(binders.length);\n    var contentTags = ListWrapper.createFixedSize(binders.length);\n\n    for (var binderIdx = 0; binderIdx < binders.length; binderIdx++) {\n      var binder = binders[binderIdx];\n      var element;\n      if (binderIdx === 0 && protoView.rootBindingOffset === 1) {\n        element = rootElementClone;\n      } else {\n        element = elementsWithBindings[binderIdx - protoView.rootBindingOffset];\n      }\n      boundElements[binderIdx] = element;\n\n      // boundTextNodes\n      var childNodes = DOM.childNodes(DOM.templateAwareRoot(element));\n      var textNodeIndices = binder.textNodeIndices;\n      for (var i = 0; i<textNodeIndices.length; i++) {\n        ListWrapper.push(boundTextNodes, childNodes[textNodeIndices[i]]);\n      }\n\n      // viewContainers\n      var viewContainer = null;\n      if (isBlank(binder.componentId) && isPresent(binder.nestedProtoView)) {\n        viewContainer = new ViewContainer(this, element);\n      }\n      viewContainers[binderIdx] = viewContainer;\n\n      // contentTags\n      var contentTag = null;\n      if (isPresent(binder.contentTagSelector)) {\n        contentTag = new Content(element, binder.contentTagSelector);\n      }\n      contentTags[binderIdx] = contentTag;\n    }\n\n    var view = new View(\n      protoView, viewRootNodes,\n      boundTextNodes, boundElements, viewContainers, contentTags\n    );\n\n    for (var binderIdx = 0; binderIdx < binders.length; binderIdx++) {\n      var binder = binders[binderIdx];\n      var element = boundElements[binderIdx];\n\n      // static child components\n      if (isPresent(binder.componentId) && isPresent(binder.nestedProtoView)) {\n        var childView = this._createView(binder.nestedProtoView);\n        view.setComponentView(this._shadowDomStrategy, binderIdx, childView);\n      }\n\n      // events\n      if (isPresent(binder.eventLocals)) {\n        ListWrapper.forEach(binder.eventNames, (eventName) => {\n          this._createEventListener(view, element, binderIdx, eventName, binder.eventLocals);\n        });\n      }\n    }\n\n    if (protoView.isRootView) {\n      view.hydrate(null);\n    }\n\n    return view;\n  }\n\n  _createEventListener(view, element, elementIndex, eventName, eventLocals) {\n    this._eventManager.addEventListener(element, eventName, (event) => {\n      view.dispatchEvent(elementIndex, eventName, event);\n    });\n  }\n}"]}