{"version":3,"sources":["direct_dom_renderer.js"],"names":[],"mappings":"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","file":"/home/korchev/github/angular/modules/angular2/src/render/dom/direct_dom_renderer.js","sourcesContent":["import {Promise} from 'angular2/src/facade/async';\nimport {List, ListWrapper} from 'angular2/src/facade/collection';\nimport {isBlank, isPresent} from 'angular2/src/facade/lang';\n\nimport * as api from '../api';\nimport {View} from './view/view';\nimport {ProtoView} from './view/proto_view';\nimport {ViewFactory} from './view/view_factory';\nimport {Compiler} from './compiler/compiler';\nimport {ShadowDomStrategy} from './shadow_dom/shadow_dom_strategy';\nimport {ProtoViewBuilder} from './view/proto_view_builder';\n\nfunction _resolveViewContainer(vc:api.ViewContainerRef) {\n  return _resolveView(vc.view).viewContainers[vc.elementIndex];\n}\n\nfunction _resolveView(viewRef:_DirectDomViewRef) {\n  return isPresent(viewRef) ? viewRef.delegate : null;\n}\n\nfunction _resolveProtoView(protoViewRef:DirectDomProtoViewRef) {\n  return isPresent(protoViewRef) ? protoViewRef.delegate : null;\n}\n\nfunction _wrapView(view:View) {\n  return new _DirectDomViewRef(view);\n}\n\nfunction _wrapProtoView(protoView:ProtoView) {\n  return new DirectDomProtoViewRef(protoView);\n}\n\nfunction _collectComponentChildViewRefs(view, target = null) {\n  if (isBlank(target)) {\n    target = [];\n  }\n  ListWrapper.push(target, _wrapView(view));\n  ListWrapper.forEach(view.componentChildViews, (view) => {\n    if (isPresent(view)) {\n      _collectComponentChildViewRefs(view, target);\n    }\n  });\n  return target;\n}\n\n\n\n// public so that the compiler can use it.\nexport class DirectDomProtoViewRef extends api.ProtoViewRef {\n  delegate:ProtoView;\n\n  constructor(delegate:ProtoView) {\n    super();\n    this.delegate = delegate;\n  }\n}\n\nclass _DirectDomViewRef extends api.ViewRef {\n  delegate:View;\n\n  constructor(delegate:View) {\n    super();\n    this.delegate = delegate;\n  }\n}\n\nexport class DirectDomRenderer extends api.Renderer {\n  _compiler: Compiler;\n  _viewFactory: ViewFactory;\n  _shadowDomStrategy: ShadowDomStrategy;\n\n  constructor(\n      compiler: Compiler, viewFactory: ViewFactory, shadowDomStrategy: ShadowDomStrategy) {\n    super();\n    this._compiler = compiler;\n    this._viewFactory = viewFactory;\n    this._shadowDomStrategy = shadowDomStrategy;\n  }\n\n  compile(template:api.Template):Promise<api.ProtoView> {\n    // Note: compiler already uses a DirectDomProtoViewRef, so we don't\n    // need to do anything here\n    return this._compiler.compile(template);\n  }\n\n  mergeChildComponentProtoViews(protoViewRef:api.ProtoViewRef, protoViewRefs:List<api.ProtoViewRef>):List<api.ProtoViewRef> {\n    var protoViews = [];\n    _resolveProtoView(protoViewRef).mergeChildComponentProtoViews(\n      ListWrapper.map(protoViewRefs, _resolveProtoView),\n      protoViews\n    );\n    return ListWrapper.map(protoViews, _wrapProtoView);\n  }\n\n  createRootProtoView(selectorOrElement):api.ProtoViewRef {\n    var element = selectorOrElement; // TODO: select the element if it is not a real element...\n    var rootProtoViewBuilder = new ProtoViewBuilder(element);\n    rootProtoViewBuilder.setIsRootView(true);\n    rootProtoViewBuilder.bindElement(element, 'root element').setComponentId('root');\n    this._shadowDomStrategy.processElement(null, 'root', element);\n    return rootProtoViewBuilder.build().render;\n  }\n\n  createView(protoViewRef:api.ProtoViewRef):List<api.ViewRef> {\n    return _collectComponentChildViewRefs(\n      this._viewFactory.getView(_resolveProtoView(protoViewRef))\n    );\n  }\n\n  destroyView(viewRef:api.ViewRef) {\n    this._viewFactory.returnView(_resolveView(viewRef));\n  }\n\n  insertViewIntoContainer(vcRef:api.ViewContainerRef, viewRef:api.ViewRef, atIndex=-1):void {\n    _resolveViewContainer(vcRef).insert(_resolveView(viewRef), atIndex);\n  }\n\n  detachViewFromContainer(vcRef:api.ViewContainerRef, atIndex:number):void {\n    _resolveViewContainer(vcRef).detach(atIndex);\n  }\n\n  setElementProperty(viewRef:api.ViewRef, elementIndex:number, propertyName:string, propertyValue:any):void {\n    _resolveView(viewRef).setElementProperty(elementIndex, propertyName, propertyValue);\n  }\n\n  setDynamicComponentView(viewRef:api.ViewRef, elementIndex:number, nestedViewRef:api.ViewRef):void {\n    _resolveView(viewRef).setComponentView(\n      this._shadowDomStrategy,\n      elementIndex,\n      _resolveView(nestedViewRef)\n    );\n  }\n\n  setText(viewRef:api.ViewRef, textNodeIndex:number, text:string):void {\n    _resolveView(viewRef).setText(textNodeIndex, text);\n  }\n\n  setEventDispatcher(viewRef:api.ViewRef, dispatcher:api.EventDispatcher) {\n    _resolveView(viewRef).setEventDispatcher(dispatcher);\n  }\n}\n"]}