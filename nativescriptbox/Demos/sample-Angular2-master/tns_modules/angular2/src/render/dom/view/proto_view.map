{"version":3,"sources":["proto_view.js"],"names":[],"mappings":"AAAA,KAAO,EAAC,SAAQ,CAAC,KAAO,2BAAyB,CAAC;AAClD,KAAO,EAAC,GAAE,CAAC,KAAO,+BAA6B,CAAC;AAEhD,KAAO,EAAC,IAAG;AAAG,IAAE;AAAG,YAAU;AAAG,WAAS,CAAC,KAAO,iCAA+B,CAAC;AAEjF,KAAO,EAAC,aAAY,CAAC,KAAO,mBAAiB,CAAC;AAC9C,KAAO,EAAC,gBAAe,CAAC,KAAO,UAAQ,CAAC;AAKxC,KAAO,MAAM,UAAQ;AAOnB,YAAU,CAAE,CACV,cAAa;AACb,UAAM;AACN,aAAS,CACX,CAAG;AACD,OAAG,QAAQ,EAAI,QAAM,CAAC;AACtB,OAAG,eAAe,EAAI,eAAa,CAAC;AACpC,OAAG,kBAAkB,EAAI,CAAA,GAAE,kBAAkB,AAAC,CAAC,IAAG,QAAQ,CAAC,CAAC;AAC5D,OAAG,WAAW,EAAI,WAAS,CAAC;AAC5B,OAAG,kBAAkB,EAAI,CAAA,CAAC,SAAQ,AAAC,CAAC,IAAG,QAAQ,CAAC,CAAA,EAAK,CAAA,GAAE,SAAS,AAAC,CAAC,IAAG,QAAQ,CAAG,iBAAe,CAAC,CAAC,EAAI,EAAA,EAAI,EAAA,CAAC;EAC5G;AAAA,AAEA,8BAA4B,CAAE,UAAS,AAAgB,CAAG,CAAA,MAAK,AAAgB,CAAa;AAC1F,AAAI,MAAA,CAAA,cAAa,EAAI,CAAA,WAAU,gBAAgB,AAAC,CAAC,IAAG,eAAe,OAAO,CAAC,CAAC;AAC5E,QAAS,GAAA,CAAA,CAAA,EAAE,EAAA,CAAG,CAAA,CAAA,EAAE,CAAA,IAAG,eAAe,OAAO,CAAG,CAAA,CAAA,EAAE,CAAG;AAC/C,AAAI,QAAA,CAAA,EAAC,EAAI,CAAA,IAAG,eAAe,CAAE,CAAA,CAAC,CAAC;AAC/B,SAAI,SAAQ,AAAC,CAAC,EAAC,YAAY,CAAC,CAAA,EAAK,CAAA,SAAQ,AAAC,CAAC,EAAC,gBAAgB,CAAC,CAAG;AAC9D,qBAAa,CAAE,CAAA,CAAC,EAAI,CAAA,EAAC,8BAA8B,AAAC,CAAC,UAAS,CAAG,OAAK,CAAC,CAAC;MAC1E,KAAO;AACL,qBAAa,CAAE,CAAA,CAAC,EAAI,GAAC,CAAC;MACxB;AAAA,IACF;AAAA,AACI,MAAA,CAAA,MAAK,EAAI,IAAI,UAAQ,AAAC,CAAC;AACzB,mBAAa,CAAG,eAAa;AAC7B,YAAM,CAAG,CAAA,IAAG,QAAQ;AACpB,eAAS,CAAG,CAAA,IAAG,WAAW;AAAA,IAC5B,CAAC,CAAC;AACF,cAAU,OAAO,AAAC,CAAC,MAAK,CAAG,EAAA,CAAG,OAAK,CAAC,CAAC;AACrC,SAAO,OAAK,CAAA;EACd;AAAA,AACF;AAAA,AAhDA,KAAK,eAAe,AAAC,iEACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,MAAK,YAAuB,AA8Be,CAAA,IAAG,CAAE,UAAQ,CAAC,AA9BV,IAA/C,MAAK,YAAuB,AA8BuC,CAAA,IAAG,CAAE,UAAQ,CAAC,AA9BlC,GACE;EAAC,CAAC,CAAC,CAAC;AAgDrD","file":"/home/korchev/github/angular/modules/angular2/src/render/dom/view/proto_view.js","sourcesContent":["import {isPresent} from 'angular2/src/facade/lang';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\n\nimport {List, Map, ListWrapper, MapWrapper} from 'angular2/src/facade/collection';\n\nimport {ElementBinder} from './element_binder';\nimport {NG_BINDING_CLASS} from '../util';\n\n/**\n * Note: Code that uses this class assumes that is immutable!\n */\nexport class ProtoView {\n  element;\n  elementBinders:List<ElementBinder>;\n  isTemplateElement:boolean;\n  isRootView:boolean;\n  rootBindingOffset:int;\n\n  constructor({\n    elementBinders,\n    element,\n    isRootView\n  }) {\n    this.element = element;\n    this.elementBinders = elementBinders;\n    this.isTemplateElement = DOM.isTemplateElement(this.element);\n    this.isRootView = isRootView;\n    this.rootBindingOffset = (isPresent(this.element) && DOM.hasClass(this.element, NG_BINDING_CLASS)) ? 1 : 0;\n  }\n\n  mergeChildComponentProtoViews(protoViews:List<ProtoView>, target:List<ProtoView>):ProtoView {\n    var elementBinders = ListWrapper.createFixedSize(this.elementBinders.length);\n    for (var i=0; i<this.elementBinders.length; i++) {\n      var eb = this.elementBinders[i];\n      if (isPresent(eb.componentId) || isPresent(eb.nestedProtoView)) {\n        elementBinders[i] = eb.mergeChildComponentProtoViews(protoViews, target);\n      } else {\n        elementBinders[i] = eb;\n      }\n    }\n    var result = new ProtoView({\n      elementBinders: elementBinders,\n      element: this.element,\n      isRootView: this.isRootView\n    });\n    ListWrapper.insert(target, 0, result);\n    return result\n  }\n}\n"]}